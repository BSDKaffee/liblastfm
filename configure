#!/bin/bash

source admin/utils.bash

######################################################################## usage
header "Configuring Last.fm"

test -z "$PREFIX" && PREFIX=/usr/local
export PREFIX

while [ $# -gt 0 ]
do
    case "$1" in
        --debug)
            echo "The default is --debug, but let's pretend you made a difference anyway.";;
        --release)
            echo 'Will optimise and strip binaries.'
            RELEASE=1;;
        --bundle)
            STATIC_LINK_3RDPARTIES_ON_MAC=1;;
    esac
    shift
done

QMAKE=`ruby admin/which_qmake.rb`

if [[ $QMAKE == 'toolow' ]]
then
	      ##########################################################################80-->
	echo "Your version of Qt seems to be too old, we require Qt 4.4 or above."
	echo
	echo "It is possible you have Qt3 and Qt4 both installed. Locate your Qt4 installation"
	echo "and ensure it is placed first in the path, eg:"
	echo
	echo "	PATH=/opt/qt4/bin:\$PATH ./configure"
	echo
	echo "However this configure script is very basic, perhaps we got it wrong.."
	echo "Try typing the following, perhaps it will build for you :)"
	echo
	echo "	qmake -config release && make"
	exit 1
elif [[ $QMAKE == '' ]]
then
    echo "Sorry, qmake was not found, is Qt4 installed?"
    exit 2
fi

echo 'Using '`which $QMAKE`



header 'Generating Build System'
middle "Running qpp..."
    cd src
    ../admin/qpp lastfm.pro || die "Ruby not installed?"
    cd ..

middle "Generating Makefile..."
    cat <<EOS> Makefile
.PHONY: all
all: headers __src __fingerprint __demos __tests

.PHONY: __src
__src: src/Makefile
	cd src && \$(MAKE)
.PHONY: __fingerprint
__fingerprint: src/fingerprint/Makefile
	cd src/fingerprint && \$(MAKE)
.PHONY: __tests
__tests: tests/Makefile
	cd tests && \$(MAKE)
.PHONY: __demos
__demos: demos/Makefile
	cd demos && \$(MAKE)

EOS
    admin/Makefile.rb global.h \
            core/UrlBuilder.h core/XmlQuery.h core/misc.h \
            fingerprint/Fingerprint.h \
            radio/RadioStation.h radio/RadioTuner.h \
            scrobble/Audioscrobbler.h scrobble/Scrobble.h scrobble/ScrobblePoint.h \
            types/Track.h types/Mbid.h types/Artist.h types/Album.h types/FingerprintId.h types/Playlist.h types/Tag.h types/User.h types/Xspf.h \
            ws/ws.h ws/InternetConnectionMonitor ws/NetworkAccessManager \
        >> Makefile || die 'Makefile.rb failure :('

middle "Running qmake..."
    if [ $RELEASE ]
    then
        other_args="CONFIG -= debug debug_and_release app_bundle"
        config=release
    else
        config=debug
    
        case `uname` in
            Darwin)
                [ $STATIC_LINK_3RDPARTIES_ON_MAC ] || other_args="CONFIG -= app_bundle";;
            Linux)
                other_args="CONFIG += warn_off";;
            CYGWIN_NT-5.1) 
                #other_args="-tp vc"
                other_args="NOOP=''"
        esac
    fi
    
    cat <<EOS>> Makefile
src/Makefile:
	cd src && $QMAKE -config $config "$other_args"
src/fingerprint/Makefile:
	cd src/fingerprint && $QMAKE -config $config "$other_args"
tests/Makefile:
	cd tests && $QMAKE -config debug "CONFIG -= app_bundle"
demos/Makefile:
	cd demos && $QMAKE -config debug "CONFIG -= app_bundle"
EOS

echo
echo 'Good, your configure is finished! Now type: make'
